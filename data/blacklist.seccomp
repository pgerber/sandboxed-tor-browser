# Basic standard seccomp blacklist rules, based off a few sources.

#
# linux-user-chroot (v0 profile)
#

# Block dmesg
syslog: 1
# Useless old syscall
uselib: 1
# Don't allow you to switch to bsd emulation or whatnot
personality: 1
# Don't allow disabling accounting
acct: 1
# 16-bit code is unnecessary in the sandbox, and modify_ldt is a historic source of interesting information leaks.
modify_ldt: 1
# Don't allow reading current quota use
quotactl: 1

# Scary VM/NUMA ops:
move_pages: 1
mbind: 1
get_mempolicy: 1
set_mempolicy: 1
migrate_pages: 1

# Don't allow subnamespace setups:
# XXX/yawning: The clone restriction breaks bwrap.  c'est la vie.  It
# looks like Mozilla is considering using user namespaces for the
# content process sandboxing efforts, so this may need to be enabled.
unshare: 1
mount: 1
pivot_root: 1
# {SCMP_SYS(clone), &SCMP_A0(SCMP_CMP_MASKED_EQ, CLONE_NEWUSER, CLONE_NEWUSER)}, // Breaks bwrap.

# Profiling operations; we expect these to be done by tools from
# outside the sandbox.  In particular perf has been the source of many
# CVEs.
perf_event_open: 1
ptrace: 1

#
# firejail seccomp_filter_64()
#

# mount
umount2: 1
kexec_load: 1
# ptrace
open_by_handle_at: 1
name_to_handle_at: 1
create_module: 1
init_module: 1
finit_module: 1
delete_module: 1
iopl: 1
ioperm: 1
ioprio_set: 1
swapon: 1
swapoff: 1
# syslog
process_vm_readv: 1
process_vm_writev: 1
sysfs: 1
_sysctl: 1
adjtimex: 1
clock_adjtime: 1
lookup_dcookie: 1
# perf_event_open
fanotify_init: 1
kcmp: 1
add_key: 1
request_key: 1
keyctl: 1
# uselib
# acct
# modify_ldt
# pivot_root
io_setup: 1
io_destroy: 1
io_getevents: 1
io_submit: 1
io_cancel: 1
remap_file_pages: 1
# mbind
# get_mempolicy
# set_mempolicy
# migrate_pages
# move_pages
vmsplice: 1
chroot: 1
tuxcall: 1
reboot: 1
nfsservctl: 1
get_kernel_syms: 1
